package kr.co.green.board.controller;

public class TestCode {

	// 테스트 코드 장점

	/*
	 	* 테스트 코드를 작성하면 좋은 이유
	 	* 개발 방법론중 가장 대표적인 2가지
	 	* 1. 오버 엔지니어링 방지
	 	* 	- 미래에 필요할 것 같은 기능을 미리 추가하는 행위
	 	* 	- 충분히 빠른 코드임에도 더 빠르게 리펙토리 하는 행위
	 	* 2. 개발할 때 멈춰야 하는 기준을 테스트 코드가 제시함 
	 	* 3. 서버 재부팅, 브라우저 실행, 데이터 입력 등의 행위가 불필요함
	 	* 	(테스트 코드 실행하면 됨)
	 	* 4. 구현한 기능에 대한 이력이 남음
	 	* 
	  	
	  	// 개발 방법론중 가장 대표적인 2가지
	  	1. TDD (테스트 주도 개발
	  	- 테스트 코드 작성 -> 테스트 코드 실행
	  	통과됐을 때 : 개발 (기능 구현) -> 서비스 배포
	    
	  	2. 단위 테스트 (Unit Test)
	  	- 개발(기능 구현) -> 테스트 코드 작성 -> 테스트 코드 실행
	  	통과됐을 때 : 서비스 배포
	  
	  
	  // 테스트 코드 단점
	   * 1. 비용이 발생함
	   * 2. 기존의 기능이 변경, 로직이 변경되면 기존 코드 + 테스트 코드까지 수정해야함
	   * -> 코드 커버리지
	   * 
	   * 
	   * 
	   // 테스트 코드 작성시 주의사항
	    * - 모든 기능에 대한 테스트 코드 작성 금지
	    * (검증이 필요한 코드, 복잡한 로직을 가진 코드를 위주로 테스트 코드 작성 필요)
	   */

	
	
}


  	
  	
  		
 
 